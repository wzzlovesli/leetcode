# 字符串的右旋转操作是把字符串尾部的若干个字符转移到字符串的前面。给定一个字符串 s 和一个正整数 k，请编写一个函数，将字符串中的后面 k 个字符移到字符串的前面，实现字符串的右旋转操作。

# 例如，对于输入字符串 "abcdefg" 和整数 2，函数应该将其转换为 "fgabcde"。

# 输入：输入共包含两行，第一行为一个正整数 k，代表右旋转的位数。第二行为字符串 s，代表需要旋转的字符串。

# 输出：输出共一行，为进行了右旋转操作后的字符串。

# 样例输入：

# 2
# abcdefg 
# 样例输出：

# fgabcde
# 数据范围：1 <= k < 10000, 1 <= s.length < 10000;


# class Solution:
#     def reverseWords(self, s: str, t: int) -> str:
#         # 删除前后空白


#获取输入的数字k和字符串
k = int(input())
s = input()

#通过切片反转第一段和第二段字符串
#注意：python中字符串是不可变的，所以也需要额外空间
s = s[len(s)-k:] + s[:len(s)-k]

# 需要反转后续段的数字
s = s[:len(s)-k-1:-1] + s[:len(s)-k]
print(s)